function zff_gci=zff_gci_func(x, Fs)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This function implements ZFF-based epoch extraction algorithm.
% Details of the al
% INPUTS :
%           x : speech signal
%           Fs : sampling frequency of read speech signal x
% OUTPUTS:
%           zff_gci : an array representing epoch positions in speech signal x
%
% Code by: Sunil R, Department of Electrical Engineering, Indian Institute of Science (IISc), Bangalore, India. 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

L=length(x);

s=zeros(L,1);
s(1,1)=x(1,1);
s(2:L,1)=x(2:L,1)-x(1:(L-1),1);

ak = [1, -2, 1];  % zero freq resonator 
y1 = filter(1,ak,s);    %ZFR output
y2 = filter(1,ak,y1);
 
% y1=ZFR(s);
% y2=ZFR(y1);


%tic
%To decide window length over which trend has to be removed
%To find average pitch period
W=floor(0.03*Fs); %30ms window for autocorrelation
strt=floor(0.032*Fs);          % changed
stpt=floor(0.045*Fs);   % changed
no_samples_one_ms=floor(0.001*Fs);
sp_mat=enframe(s,hamming(W),floor(W/2));
sp_mat=sp_mat';
ham_win=xcorr(hamming(W),'coeff');

% for j=1:floor(L/W)
%     %Rx(:,j)=xcorr(s((j-1)*W+1:j*W));
%     Rx(:,j)=xcorr(s((j-1)*W+1:j*W))./xcorr(rect_win)';
%     [maxval indm]=max(Rx(strt:stpt,j));
%     ind(j)=indm+2*no_samples_one_ms; % changed
% end

for j=1:size(sp_mat,2)
    Rx=xcorr(sp_mat(:,j),'coeff')./ham_win;
    [maxval indm]=max(Rx(strt:stpt));
    ind(j)=indm+2*no_samples_one_ms; % changed
end

for j=1:14
    xax(j)=(j+1)*no_samples_one_ms;
end

[pp,fr]=hist(ind,xax);
[m_pitch,m_pitch_ind]=max(pp);


N=floor(1.5*fr(m_pitch_ind)/2); %working fine for speech
pitch=fr(m_pitch_ind)*1000/Fs; %pitch in ms

%toc
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FOR MOST OF THE SPEECH SIGNALS WE CAN USE FOLLOWING VALUE OF N %%
%N=round(Fs*2/1000);   %%Window of 10 ms for mean subtraction
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%for speech signal of duration of few seconds 
%trend removal has to be done 3 times
%subtraction of local mean
y22 = [zeros(N,1);y2;zeros(N,1)];
%y2 = [zeros(M,1);y2;zeros(M,1)];
%y =  zeros(length(y2),1);
% for j = 1:4
%     for i = 1+M:length(y2)-M
%         y(i) = y2(i) - mean( y2(i-M:i+M));
%     end
%     y2 = y;
% end
%remove local mean 4 times iteratively to make it 0 bias
%this is done 4 times as there are 4 integrals in 4 pole resonator
zfr_sig1 =  zeros(length(y22),1);
for j = 1:3
    fltavg = ones(2*N+1,1)/(2*N+1);
    yavg = conv(y22,fltavg,'same');
    zfr_sig1(1+N:length(y22)-N) = y22(1+N:length(y22)-N)-yavg(N+1:length(yavg)-N);
    y22 = zfr_sig1;
end

zfr_sig = y22(N+1:length(y22)-N);
% zfr_sig1=mean_sub(y2, N, L);
% zfr_sig2=mean_sub(zfr_sig1, N, L);
% zfr_sig=mean_sub(zfr_sig2, N, L);
%end


zff_gci1=cat(1,0,diff(sign(zfr_sig))/2);
zc_ind=find(zff_gci1>0);
% zff_gci=zc_ind./Fs;
 zff_gci=zeros(L,1);
zff_gci(zc_ind)=1;
% zff3 = zfr_sig/max(abs(zfr_sig(1:round(length(zfr_sig)*0.75))));   %naive normalization just to plot better
% zff_gci = zerocros(zff3,'p'); 
% zff_gci=zff_gci./Fs;
%F0=0.5*Fs/N;
% zfr_sig1=zfr_sig(1:floor(length(zfr_sig)*0.85))./max(abs(zfr_sig(1:floor(length(zfr_sig)*0.85))));
% figure;plot(zfr_sig1);hold on;plot(zff_gci,'r');grid;
%clear Rx sp_mat zfr_sig zfr_sig1 y22 yavg y1 y2 s x; 

end

